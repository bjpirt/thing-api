service: thing-api

provider:
  name: aws
  runtime: nodejs18.x
  memorySize: 256
  region: eu-west-2
  stage: ${opt:stage, 'dev'}
  timeout: 30
  environment:
    METRICS_TABLE: '${self:service}-${self:provider.stage}-metrics'
    DATASETS_TABLE: '${self:service}-${self:provider.stage}-datasets'
    DEFAULT_USER: ${env:DEFAULT_USER, 'admin'}
    DEFAULT_PASSWORD_HASH: ${env:DEFAULT_PASSWORD_HASH, '$2a$10$2eUC591MLNzy5ruk7e61xeZ4J0p9uSFmr62MkiEFEmabQ8w6NZ8Mm'}
    JWT_SECRET: ${env:JWT_SECRET, 'Fqn5J4mgbWzk'}
  iamRoleStatements:
    - Effect: Allow
      Action:
        - dynamodb:Query
        - dynamodb:Scan
        - dynamodb:GetItem
        - dynamodb:PutItem
        - dynamodb:UpdateItem
      Resource: '*'
  httpApi:
    cors: true
    authorizers:
      authorizer:
        type: request
        functionName: authorizer
        resultTtlInSeconds: 0
        enableSimpleResponses: true
        identitySource:
          - $request.header.Authorization

plugins:
  - serverless-dynamodb-local
  - serverless-esbuild
  - serverless-offline

package:
  exclude:
    - 'ui/**'
    - 'node_modules/aws-sdk'

custom:
  dynamodb:
    stages:
      - dev
    start:
      port: 8000
      inMemory: true
      migrate: true

functions:
  getDatasets:
    handler: api/handlers.getDatasets
    events:
      - httpApi:
          path: /datasets
          method: get
          authorizer:
            name: authorizer
  getDataset:
    handler: api/handlers.getDataset
    events:
      - httpApi:
          path: /datasets/{datasetId}
          method: get
          authorizer:
            name: authorizer
  createDataset:
    handler: api/handlers.createDataset
    events:
      - httpApi:
          path: /datasets
          method: post
          authorizer:
            name: authorizer
  updateDataset:
    handler: api/handlers.updateDataset
    events:
      - httpApi:
          path: /datasets/{datasetId}
          method: put
          authorizer:
            name: authorizer
  getMetric:
    handler: api/handlers.getMetric
    events:
      - httpApi:
          path: /datasets/{datasetId}/metrics/{metricId}
          method: get
          authorizer:
            name: authorizer
  login:
    handler: api/handlers.login
    events:
      - httpApi:
          path: /login
          method: post
  authorizer:
    handler: api/handlers.authorizer
    description: Lambda for the authorizer function

resources:
  Resources:
    DatasetsDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: S
          - AttributeName: user
            AttributeType: S
          - AttributeName: createdAt
            AttributeType: S
        KeySchema:
          - AttributeName: id
            KeyType: HASH
        GlobalSecondaryIndexes:
          - IndexName: userDatasetIndex
            KeySchema:
              - AttributeName: user
                KeyType: HASH
              - AttributeName: createdAt
                KeyType: RANGE
            Projection:
              ProjectionType: 'ALL'
            ProvisionedThroughput:
              ReadCapacityUnits: 1
              WriteCapacityUnits: 1
        BillingMode: PROVISIONED
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        TableName: ${self:provider.environment.DATASETS_TABLE}
    ValuesDynamoDbTable:
      Type: 'AWS::DynamoDB::Table'
      DeletionPolicy: Retain
      Properties:
        AttributeDefinitions:
          - AttributeName: id
            AttributeType: 'S'
          - AttributeName: t
            AttributeType: 'N'
        KeySchema:
          - AttributeName: id
            KeyType: HASH
          - AttributeName: t
            KeyType: RANGE
        BillingMode: PROVISIONED
        ProvisionedThroughput:
          ReadCapacityUnits: 1
          WriteCapacityUnits: 1
        StreamSpecification:
          StreamViewType: NEW_AND_OLD_IMAGES
        TableName: ${self:provider.environment.METRICS_TABLE}
